{{define "unit"}}
    <!DOCTYPE html>
    <html lang="en">

    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <title>Units</title>
        <!-- plugins:css -->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
        <link rel="stylesheet" href="/static/admin/vendors/ti-icons/css/themify-icons.css">
        <link rel="stylesheet" href="/static/admin/vendors/base/vendor.bundle.base.css">
        <!-- endinject -->
        <!-- plugin css for this page -->
        <!-- End plugin css for this page -->
        <!-- inject:css -->
        <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
        <link rel="stylesheet" href="/static/admin/css/style.css">
        <!-- endinject -->
        <link rel="shortcut icon" href="/static/admin/images/favicon.png"/>
        <style>
            .content-wrapper {
                background: white;
            }
            label {
                font-weight: bold;
            }
            .notie-container {
                z-index: 50000;
            }
        </style>
        {{block "css" . }}

        {{end}}
    </head>
    <body>
   
        <!-- partial -->
        <div class="container-fluid page-body-wrapper">
            <!-- partial:partials/_sidebar.html -->
            <nav class="sidebar sidebar-offcanvas" id="sidebar">
                <ul class="nav">
                    <li class="nav-item">
                        <a class="nav-link" href="/admin/dashboard">
                            <i class="ti-shield menu-icon"></i>
                            <span class="menu-title">Dashboard</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-toggle="collapse" href="#ui-basic" aria-expanded="false"
                           aria-controls="ui-basic">
                            <i class="ti-palette menu-icon"></i>
                            <span class="menu-title">Properties</span>
                            <i class="menu-arrow"></i>
                        </a>
                        <div class="collapse" id="ui-basic">
                            <ul class="nav flex-column sub-menu">
                                <li class="nav-item"><a class="nav-link" href="/admin/add-new-property">Add New
                                        Property</a></li>
                                <li class="nav-item"><a class="nav-link" href="/admin/all-properties">
                                        View All Properties</a></li>
                            </ul>
                        </div>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/admin/all_units/show">
                            <i class="ti-layout-list-post menu-icon"></i>
                            <span class="menu-title">All Units</span>
                        </a>
                    </li>

                </ul>
            </nav>
            <!-- partial -->
            <div class="main-panel">
                <div class="content-wrapper">
                    <div class="row">
                        <div class="col-md-12 grid-margin">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h4 class="font-weight-bold mb-0">{{block "page-title" .}} {{end}}</h4>
                                </div>
                                <div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        {{block "content" .}}

                        {{end}}
                    </div>

                </div>
                <!-- content-wrapper ends -->
                <!-- partial:partials/_footer.html -->
                <footer class="footer">
                    <div class="d-sm-flex justify-content-center justify-content-sm-between">

                    </div>
                </footer>
                <!-- partial -->
            </div>
            <!-- main-panel ends -->
        </div>
        <!-- page-body-wrapper ends -->
    </div>
    <!-- container-scroller -->

    <!-- plugins:js -->
    <script src="/static/admin/vendors/base/vendor.bundle.base.js"></script>
    <!-- endinject -->
    <!-- Plugin js for this page-->

    <!-- End plugin js for this page-->
    <!-- inject:js -->
    <script src="/static/admin/js/off-canvas.js"></script>
    <script src="/static/admin/js/hoverable-collapse.js"></script>
    <script src="/static/admin/js/template.js"></script>
    <script src="/static/admin/js/todolist.js"></script>
    <!-- endinject -->
    <!-- Custom js for this page-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
    <script src="https://unpkg.com/notie"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script src="/static/js/app.js"></script>
    <script src="/static/admin/js/dashboard.js"></script>
    <!-- End custom js for this page-->

    <script>
        let attention = Prompt();

(function () {
    'use strict'

    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    let forms = document.querySelectorAll('.needs-validation');

    // Loop over them and prevent submission
    Array.prototype.slice.call(forms)
        .forEach(function (form) {
            form.addEventListener('submit', function (event) {
                if (!form.checkValidity()) {
                    event.preventDefault()
                    event.stopPropagation()
                }

                form.classList.add('was-validated');
            }, false);
        })
})();


function notify(msg, msgType) {
    notie.alert({
        type: msgType,// optional, default = 4, enum: [1, 2, 3, 4, 5, 'success', 'warning', 'error', 'info', 'neutral']
        text: msg,
        // stay: Boolean, // optional, default = false
        //time: Number, // optional, default = 3, minimum = 1,
        //position: String // optional, default = 'top', enum: ['top', 'bottom']
    })
}

function notifyModal(title, text, icon, confirmationButtonText) {
    Swal.fire({
     title: title,
        html: text,
        icon: icon,
        confirmButtonText: confirmationButtonText
    })
}

{{with .Error}}
notify("{{.}}", "error")
{{end}}

{{with .Flash}}
notify("{{.}}", "success")
{{end}}

{{with .Warning}}
notify("{{.}}", "warning")
{{end}}


// Prompt is our javascript module for all alerts, notifications, and custom pop-up dialogs
function Prompt() {
    let toast = function (c) {
        const {
            msg = "",
            icon = "success",
            position = "top-end",

        } = c;

        const Toast = Swal.mixin({
            toast: true,
            title: msg,
            position: position,
            icon: icon,
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })

        Toast.fire({})

    }

    let success = function (c) {
        const {
            msg = "",
            title = "",
            footer = "",

        } = c;

        Swal.fire({
            icon: 'success',
            title: title,
            text: msg,
            footer: footer,
        })
    }

    let error = function (c) {
        const {
            msg = "",
            title = "",
            footer = "",

        } = c;

        Swal.fire({
            icon: 'error',
            title: title,
            text: msg,
            footer: footer,
        })
    }

    async function custom(c) {
        const {
            icon = "",
            msg = "",
            title = "",
            showConfirmButton = true,

        } = c;

        const {value: result} = await Swal.fire({
            icon: icon,
            title: title,
            html: msg,
            backdrop: false,
            focusConfirm: false,
            showCancelButton: true,
            showConfirmButton: showConfirmButton,

            willOpen: () => {
                if (c.willOpen !== undefined) {
                    c.willOpen();
                }
            },

            didOpen: () => {
                if (c.didOpen !== undefined) {
                    c.didOpen();
                }
            },

            preConfirm: () => {
                return [
                    document.getElementById('start').value,
                    document.getElementById('end').value
                ]
            },

        })

        if (result) {
            if (result.dismiss !== Swal.DismissReason.cancel) {
                if (result.value !== "") {
                    if (c.callback !== undefined) {
                        c.callback(result);
                    }
                } else {
                    c.callback(false);
                }
            } else {
                c.callback(false);
            }
        }
    }

    return {
        toast: toast,
        success: success,
        error: error,
        custom: custom,
    }
}
    </script>

    {{block "js" . }}

    {{end}}
    </body>

    </html>


{{end}}